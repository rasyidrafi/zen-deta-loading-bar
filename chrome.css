/*
 * =================================================================
 *  Top Loading Bar for Zen Browser - CSS-Only Method
 * =================================================================
 *  This targets the browserStack browser content wrapper
 *  and is triggered ONLY on page load via the [waiting] attribute.
 */

:root {
  --mod-detaloadingbar-maincolor: var(--mod-detaloadingbar-maincolor, rgba(243,202,176,255));
  --mod-detaloadingbar-middlecolor: var(--mod-detaloadingbar-middlecolor, rgba(255,255,255,255));
  --mod-detaloadingbar-thickness: var(--mod-detaloadingbar-thickness, 6px);
}

/* First, ensure the browserStack can act as a positioning container */
.browserStack {
  position: relative !important;
  transform: translateZ(0);
  will-change: auto;
}

/* Now, create the loading bar inside it when the window is loading */
#main-window .browserStack::before {
  content: "" !important;
  position: absolute !important;
  top: 8px !important;
  left: 50% !important;
  transform: translateX(-50%) !important;
  height: var(--mod-detaloadingbar-thickness) !important; /* Use the variable */
  border-radius: 4px !important;
  z-index: 9999 !important;
  pointer-events: none !important; /* Makes sure you can't click on it */

  /* Static gradient background */
  background: linear-gradient(
    to right,
    var(--mod-detaloadingbar-maincolor),
    var(--mod-detaloadingbar-middlecolor),
    var(--mod-detaloadingbar-maincolor)
  ) !important;

  /* Hidden by default */
  opacity: 0 !important;
  visibility: hidden !important;
  transition: opacity 0.2s ease, visibility 0.2s ease !important;
}

/* Show loading bar ONLY when any tab is busy */
/* Use :has() if supported for best reliability */
#main-window:has(.tabbrowser-tab[busy]) .browserStack::before {
  opacity: 1 !important;
  visibility: visible !important;
  animation: zen-loading-pulse 0.8s ease-out infinite alternate !important;
}

/* Fallback for browsers without :has() support: show for each busy tab's browserStack */
.tabbrowser-tab[busy] .browserStack::before {
  opacity: 1 !important;
  visibility: visible !important;
  animation: zen-loading-pulse 0.8s ease-out infinite alternate !important;
}

/* Keyframes for the one-way growth animation */
@keyframes zen-loading-pulse {
  from {
    width: 25px;
    filter: blur(5px);
    opacity: 0;
  }
  to {
    width: 100px;
    filter: blur(0px);
    opacity: 1;
  }
}